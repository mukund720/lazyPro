name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set execute permissions
        run: |
          chmod +x scripts/build-angular.sh
          chmod +x scripts/deploy.sh

      - name: Build Angular app
        run: ./scripts/build-angular.sh

      - name: Upload build artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/lazy-pro

      - name: Fetch artifact URL
        id: fetch-artifact-url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching artifact information..."
          
          # Get the list of artifacts for the current workflow run
          ARTIFACTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          echo "Artifacts: $ARTIFACTS"

          # Extract artifact ID from the response
          ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '.artifacts[0].id')
          echo "Artifact ID: $ARTIFACT_ID"

          if [ -z "$ARTIFACT_ID" ]; then
            echo "Artifact ID not found. Exiting."
            exit 1
          fi

          # Get the artifact download URL
          ARTIFACT_URL=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${ARTIFACT_ID}/zip" \
            | jq -r '.url')

          echo "Artifact URL: $ARTIFACT_URL"

          if [ -z "$ARTIFACT_URL" ]; then
            echo "Artifact URL not found. Exiting."
            exit 1
          fi

          # Set the environment variable for use in the deploy job
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        run: |
          echo "Downloading artifact from ${{ env.ARTIFACT_URL }}..."
          curl -L ${{ env.ARTIFACT_URL }} -o artifact.zip
          
      - name: List downloaded files
        run: |
          echo "Listing files in the current directory:"
          ls -la
          echo "Listing files in the downloaded artifact zip:"
          unzip -l artifact.zip

      - name: Set execute permissions
        run: chmod +x scripts/deploy.sh

      - name: Deploy to Hostinger
        run: |
          echo "Deploying artifact..."
          ./scripts/deploy.sh ${{ secrets.HOSTINGER_HOST }} ${{ secrets.HOSTINGER_USER }} ${{ secrets.HOSTINGER_SSH_KEY }} ${{ secrets.HOSTINGER_PORT }} artifact.zip
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
