name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set execute permissions
        run: |
          chmod +x scripts/build-angular.sh
          chmod +x scripts/deploy.sh

      - name: Build Angular app
        run: ./scripts/build-angular.sh

      - name: Upload build artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/lazy-pro

      - name: Fetch artifact URL
        id: fetch-artifact-url
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARTIFACT_ID=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts --jq '.artifacts[0].id')
          ARTIFACT_URL=$(gh api /repos/${{ github.repository }}/actions/artifacts/${ARTIFACT_ID}/zip --jq '.url')
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: List downloaded files
        run: |
          echo "Listing files in the current directory:"
          ls -la
          echo "Listing files in the build-artifacts directory:"
          find . -type d -name 'build-artifacts' -exec ls -la {} \; || echo "Directory build-artifacts does not exist"

      - name: Set execute permissions
        run: chmod +x scripts/deploy.sh

      - name: Deploy to Hostinger
        run: ./scripts/deploy.sh ${{ secrets.HOSTINGER_HOST }} ${{ secrets.HOSTINGER_USER }} ${{ secrets.HOSTINGER_SSH_KEY }} ${{ secrets.HOSTINGER_PORT }} ${{ env.ARTIFACT_URL }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
